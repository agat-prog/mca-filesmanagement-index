apiVersion: apps/v1
kind: Deployment
metadata:
  name: index
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: index
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: index
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: index
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        env:
          - name: MONGODB_HOST
            value: "{{ .Values.mongodb.host }}"
          - name: MONGODB_PORT
            value: "{{ .Values.mongodb.port }}"
          - name: MONGODB_USER
            value: "{{ .Values.mongodb.user }}"
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: files-secrets
                key: mongopass
          - name: MONGODB_DBNAME
            value: INDEX
          - name: DB_HOST
            value: "{{ .Values.mysql.host }}"
          - name: DB_USER
            value: "{{ .Values.mysql.user }}"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: files-secrets
                key: mysqlpass
          - name: KAFKA_HOST
            value: "{{ .Values.kafka.host }}"
          - name: KAFKA_PORT
            value: "{{ .Values.kafka.port }}"
          - name: ZOOKEEPER_HOST
            value: "{{ .Values.zookeeper.host }}"
          - name: ZOOKEEPER_PORT
            value: "{{ .Values.zookeeper.port }}"
          - name: USERS_HOST
            value: "{{ .Values.oauth2.host }}"
          - name: USERS_PORT
            value: "{{ .Values.oauth2.port }}"
        ports:
          - containerPort: {{ .Values.service.port }}
---
apiVersion: v1
kind: Service
metadata:
  name: index-service
  namespace: {{ .Values.namespace }}
  labels:
    app: index
    release: {{ .Release.Name }}    
spec:
  type: {{ .Values.service.type }}
  selector:
    app: index
  ports:
  - name: index-port
    port: {{ .Values.service.port }}
